
Input: |
    This is a description.

Output: |
    This is a description.

Ast: |
    JsDoc {
        description: "This is a description.",
        tags: [],
    }

---

Input: |
    This is


    a multi-line
    description.

Output: |
    This is


    a multi-line
    description.

Ast: |
    JsDoc {
        description: "This is\n \n\na multi-line\ndescription.",
        tags: [],
    }

---

Input: |
    This is a description with tag.

    @public

Output: |
    This is a description with tag.

    @public

Ast: |
    JsDoc {
        description: "This is a description with tag.\n",
        tags: [
            Unknown(
                UnknownTag {
                    tag: "@public",
                    text: "",
                },
            ),
        ],
    }

---

Input: |
    This is a description with tag.
    @public

Output: |
    This is a description with tag.
    @public

Ast: |
    JsDoc {
        description: "This is a description with tag.",
        tags: [
            Unknown(
                UnknownTag {
                    tag: "@public",
                    text: "",
                },
            ),
        ],
    }

---

Input: |
    @param foo
    @param foo description
    @param foo
    description
    @param [foo]
    @param [foo] description
    @param [foo]
    description
    @param [foo=123]
    @param [foo=123] description
    @param [foo=123]
    description
    @param {number} foo
    @param {number} foo description
    @param {number} [foo]
    @param {number} [foo] description
    @param {number} [foo=123]
    @param {number} [foo=123] description
    @param {object} obj
    @param {string} obj.name
    @param {object[]} obj.locations
    @param {string} obj.locations[].address
    @param {string} [obj.locations[].address]
    @param {} foo

Output: |
    @param foo
    @param foo description
    @param foo
    description
    @param [foo]
    @param [foo] description
    @param [foo]
    description
    @param [foo=123]
    @param [foo=123] description
    @param [foo=123]
    description
    @param {number} foo
    @param {number} foo description
    @param {number} [foo]
    @param {number} [foo] description
    @param {number} [foo=123]
    @param {number} [foo=123] description
    @param {object} obj
    @param {string} obj.name
    @param {object[]} obj.locations
    @param {string} obj.locations[].address
    @param {string} [obj.locations[].address]
    @param foo

Ast: |
    JsDoc {
        description: "",
        tags: [
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Required,
                    description: "description",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Required,
                    description: "\ndescription",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Optional,
                    description: "description",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Optional,
                    description: "\ndescription",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "description",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "\ndescription",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "description",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: Optional,
                    description: "description",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "description",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "object",
                    ),
                    name: "obj",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "obj.name",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "object[]",
                    ),
                    name: "obj.locations",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "obj.locations[].address",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "obj.locations[].address",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
        ],
    }

---

Input: |
    @param {string} foo
    @param{string}foo
    @param{string}[foo]
    @param{string}[foo=]
    @param   {   string   }  [  foo  =  123  ]
    @param   {      }  [  foo  =  123  ]

Output: |
    @param {string} foo
    @param {string} foo
    @param {string} [foo]
    @param {string} [foo]
    @param {string} [foo=123]
    @param [foo=123]

Ast: |
    JsDoc {
        description: "",
        tags: [
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: OptionalWithDefault(
                        "123",
                    ),
                    description: "",
                },
            ),
        ],
    }

---

Input: |
    @param   {
    string
    } foo
    @param   {string // comment
    | number}  foo
    @param { number = } foo
    @param {  =  } foo
    @param {{
      name: { first: string, last: string };
    }} foo
    @param {'}' | "}" | `}${{'}': "}"}}}`} foo

Output: |
    @param {
    string
    } foo
    @param {string // comment
    | number} foo
    @param {number} [foo]
    @param [foo]
    @param {{
      name: { first: string, last: string };
    }} foo
    @param {'}' | "}" | `}${{'}': "}"}}}`} foo

Ast: |
    JsDoc {
        description: "",
        tags: [
            Param(
                ParamTag {
                    ty: Some(
                        "\nstring\n",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string // comment\n| number",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "number",
                    ),
                    name: "foo",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Optional,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "{\n  name: { first: string, last: string };\n}",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "'}' | \"}\" | `}${{'}': \"}\"}}}`",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
        ],
    }

---

Input: |
    @arg foo
    @arg {string} foo
    @argument foo
    @argument {string} foo

Output: |
    @param foo
    @param {string} foo
    @param foo
    @param {string} foo

Ast: |
    JsDoc {
        description: "",
        tags: [
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: None,
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
            Param(
                ParamTag {
                    ty: Some(
                        "string",
                    ),
                    name: "foo",
                    optional: Required,
                    description: "",
                },
            ),
        ],
    }

---

Input: |
    @returns
    @returns description
    @returns
    description
    @returns {string}
    @returns


    {number}
    @returns {string} description
    @returns {string}
    description

Output: |
    @returns
    @returns description
    @returns
    description
    @returns {string}
    @returns {number}
    @returns {string} description
    @returns {string}
    description

Ast: |
    JsDoc {
        description: "",
        tags: [
            Returns(
                ReturnsTag {
                    ty: None,
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: None,
                    description: "description",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: None,
                    description: "\ndescription",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "string",
                    ),
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "number",
                    ),
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "string",
                    ),
                    description: "description",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "string",
                    ),
                    description: "\ndescription",
                },
            ),
        ],
    }

---

Input: |
    @returns
    @returns   description
    @returns  {}
    @returns{void}
    @returns{void}
    @returns{void}description
    @returns{void}   description
    @returns


    {

    void

    }

Output: |
    @returns
    @returns description
    @returns
    @returns {void}
    @returns {void}
    @returns {void} description
    @returns {void} description
    @returns {

    void

    }

Ast: |
    JsDoc {
        description: "",
        tags: [
            Returns(
                ReturnsTag {
                    ty: None,
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: None,
                    description: "description",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: None,
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "void",
                    ),
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "void",
                    ),
                    description: "",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "void",
                    ),
                    description: "description",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "void",
                    ),
                    description: "description",
                },
            ),
            Returns(
                ReturnsTag {
                    ty: Some(
                        "\n\nvoid\n\n",
                    ),
                    description: "",
                },
            ),
        ],
    }

---

Input: |
    @returns  {

Output: |
    @returns  {

Ast: |
    JsDoc {
        description: "",
        tags: [
            Unknown(
                UnknownTag {
                    tag: "@returns",
                    text: "  {",
                },
            ),
        ],
    }

---

Input: |
    @return {string} description

Output: |

Ast: |
    JsDoc {
        description: "",
        tags: [
            Returns(
                ReturnsTag {
                    ty: Some(
                        "string",
                    ),
                    description: "description",
                },
            ),
        ],
    }

---
